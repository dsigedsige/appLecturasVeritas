
@{
    ViewBag.Title = "Check List";
    Layout = "~/Views/Shared/_LayoutPrincipal.cshtml";
}

@section instances{
    @Styles.Render("~/Content/bootstrap-table/bootstrap-table.css")
    @Scripts.Render("~/Content/bootstrap-table/bootstrap-table.js")
    @Scripts.Render("~/Content/bootstrap-table/locale/bootstrap-table-es-MX.js")

    @Scripts.Render("~/Content/bootstrap/js/bootstrap-toggle.min.js")
    @Scripts.Render("~/Content/angular/angular.js")
    <script src="~/Content/pdf/html2canvas.js"></script>

    @Scripts.Render("~/Content/pdf/jspdf.js")
    @Scripts.Render("~/Content/pdf/pdfFromHTML.js")
    @Scripts.Render("~/Content/pdf/jspdf.plugin.autotable.js")
    @Styles.Render("~/Content/bootstrap/css/bootstrap-toggle.min.css")

    @Styles.Render("~/Content/bootstrap-datepicker/css/bootstrap-datepicker.min.css")
    @Scripts.Render("~/Content/bootstrap-datepicker/js/bootstrap-datepicker.min.js")
    @Scripts.Render("~/Content/bootstrap-datepicker/locales/bootstrap-datepicker.es.min.js")

    @Styles.Render("~/Content/dataTables-bootstrap/css/dataTables.bootstrap.min.css")
    @Scripts.Render("~/Content/dataTables-bootstrap/js/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/dataTables-bootstrap/js/dataTables.bootstrap.min.js")

    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,500,700" rel="stylesheet">

}

<style>
 
    input[type="text"] {
        font-size: 11px;
    }

    .btn {
        font-size: 12px;
    }

    input[type="text"] {
        font-size: 11px;
    }
    


    label {
        font-family: 'Montserrat', sans-serif !important;
        font-size: 12px;
        font-weight: bold;
    }

    .form-control {
        font-size: 11px;
        font-family: 'Montserrat', sans-serif !important;
        height: 35px;
    }

    .ui-pnotify-text {
        font-family: 'Montserrat', sans-serif !important;
        font-weight: bold;
    }



    .datepicker {
        width: 200px;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #dddddd;
    }
</style>

<script type="text/javascript">
    var app = angular.module('appControlPreventivo', []);

    app.directive('onFinishRender', function ($timeout) {
        return {
            restrict: 'A',
            link: function (scope, element, attr) {
                if (scope.$last === true) {
                    $timeout(function () {
                        scope.$emit(attr.onFinishRender);
                    });
                }
            }
        }
    });

    app.controller('ctrlControl', function ($scope, $http, $timeout, $q) {
        $(function () {
            $('#id_fecha').datepicker({
                format: 'dd/mm/yyyy',
                language: 'es',
                autoclose: true
            });
        });

        $scope.Obj_List_Servicios = [];
        $scope.Listado_Servicios = function () {
            var variables = {
                method: 'POST',
                url: '../GeneracionActas/Servicios_checkList',
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                }
            }
            $http(variables)
                .success(function (data) {
                    $scope.Obj_List_Servicios = [];
                    $scope.Obj_List_Servicios = data;
                })
                .error(function () {
                    alert('Ocurrio un problema con la conexion, vuelva a intentar.')
                });
        }


        $scope.Obj_List_Operario = [];
        $scope.Listado_Operarios = function () {
            var variables = {
                method: 'POST',
                url: '../VerificacionFotos/ListandoOperarios',
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                }
            }
            $http(variables)
                .success(function (data) {
                    $scope.Obj_List_Operario = [];
                    $scope.Obj_List_Operario = data;
                })
                .error(function () {
                    alert('Ocurrio un problema con la conexion, vuelva a intentar.')
                });
        }
            ;

        var oTable_cabecera = null;
        $scope.$on('ngRepeatFinished_cabecera', function (ngRepeatFinishedEvent) {
            oTable_cabecera = $('#tblLista').DataTable(
                {
                    scrollY: "400px",
                    paging: false,
                });
        });


        $scope.inicializando_variables = function () {
            $scope.id_tipoServicio = '0';
            $scope.id_operario = '0';
            $scope.tipo_reporte = '1';
            $scope.Listado_Servicios();
            $scope.Listado_Operarios()
        }


        $scope.Obj_List_Cabecera = [];
        $scope.mostrar_checkList = function () {

            var cbo_servicio = document.getElementById('cbo_servicio').value;
            var cbo_operario = document.getElementById('cbo_operario').value;
            var id_fecha = document.getElementById('id_fecha').value;
            var cbo_tipoReporte = document.getElementById('cbo_tipoReporte').value;

            if (cbo_servicio == '' || cbo_servicio == 0) {
                new PNotify({
                    title: 'Sistemas',
                    text: 'Por favor seleccione una Actividad.',
                    type: 'error'
                });
                return;
            }
            if (id_fecha == '') {
                new PNotify({
                    title: 'Sistemas',
                    text: 'Por favor ingrese o seleccione una Fecha Inicial.',
                    type: 'error'
                });
                return;
            }
            if (cbo_tipoReporte == '' || cbo_tipoReporte == 0 || cbo_tipoReporte == '') {
                new PNotify({
                    title: 'Sistemas',
                    text: 'Por favor seleccione un Tipo de Reporte.',
                    type: 'error'
                });
                return;
            }


            $('.sige-load').show();
            $scope.progress = 0;

            var variables = {
                method: 'POST',
                url: '../GeneracionActas/Mostrando_informacion_checkList',
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                },
                data: {
                    servicio: cbo_servicio,
                    operario: cbo_operario,
                    fecha: id_fecha,
                    tipoReporte: cbo_tipoReporte
                }
            }
            $http(variables)
                .success(function (data) {
                    $('.sige-load').hide();
                    $scope.Obj_List_Cabecera = [];
                    $timeout(function () {
                        if (oTable_cabecera == null) {
                            $scope.Obj_List_Cabecera = data;
                        } else {
                            oTable_cabecera.clear();
                            oTable_cabecera.destroy();
                            oTable_cabecera = null;
                            $scope.Obj_List_Cabecera = data;
                        }
                    }, 100);
                })
                .error(function () {
                    $('.sige-load').hide();
                    alert('Ocurrio un problema con la conexion, vuelva a intentar.')

                });
        }

        $scope.progress = 0;
        function descargarFoto(item) {
            var q = $q.defer();
            $timeout(function () {
                $scope.crear_pdf_checkList(item).then(function () {
                    $scope.progress += (100 / (parseFloat($scope.Obj_List_Cabecera.length)));
                    q.resolve('k');
                });
            }, 1000)
            return q.promise;
        }

        $scope.descargarMasivo = function () {
            var q = $q.defer();
            $scope.progress = 0;
            $scope.Obj_List_Cabecera.reduce(function (p, val) {
                return p.then(function () {
                    return descargarFoto(val);
                });
            }, $q.when(true)).then(function (finalResult) {
                q.resolve('success');
            }, function (err) {
                q.reject(err);
            });

            return q.promise;

        }

        var getCodUniq = function () {
            // CAPTURANDO FECHA ACTUAL
            var hoy = new Date();
            var dd = hoy.getDate();
            var mm = hoy.getMonth() + 1;
            var yyyy = hoy.getFullYear();
            var hour = hoy.getHours();
            var minuts = hoy.getMinutes();
            var second = hoy.getSeconds();
            if (dd < 10) {
                dd = '0' + dd
            }

            if (mm < 10) {
                mm = '0' + mm
            }
            hoy = yyyy + '' + mm + '' + dd + '' + hour + '' + minuts + '' + second;
            // GENERANDO CODIGO ALEATORIO
            var codigoAle = Math.floor(Math.random() * 1000000);

            return codigoAle + '_' + hoy;
        }


        $scope.crear_pdf_checkList = function (obj_data) {
            var q = $q.defer();
            if ($scope.tipo_reporte == '1' && $scope.tipo_reporte == 1) {
                $scope.getPdf_formato1(obj_data).then(function () {
                    q.resolve('ok');
                }, function (err) {
                    q.reject(err);
                });
            }
            if ($scope.tipo_reporte == '2' && $scope.tipo_reporte == 2) {
                $scope.getPdf_formato2(obj_data).then(function () {
                    q.resolve('ok');
                }, function (err) {
                    q.reject(err);
                });
            }
            if ($scope.tipo_reporte == '3' && $scope.tipo_reporte == 3) {
                $scope.getPdf_formato3(obj_data).then(function () {
                    q.resolve('ok');
                }, function (err) {
                    q.reject(err);
                });
            }
            return q.promise;
        }


        $scope.getPdf_formato1 = function (data) {
            var q = $q.defer();

            $('.sige-load').show();
            var variables = {
                method: 'POST',
                url: '../GeneracionActas/get_generacionPdf_checkList',
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                },
                data: {
                    idCheckList: data.idCheckList,
                    tipoFormato: 1
                }
            }
            $http(variables)
                .success(function (obj_data) {
                    $('.sige-load').hide();
 

                    if (obj_data.length > 0) {

                        var doc = new jsPDF();
                        var altura = 15;
                        let nroPregunta = 0;
                        let splitTitle = '';
                        let pag = 0;
    
                        let cabeceraReporte = () => {
                            pag += 1;
                            doc.setFontSize(6);
                            doc.text(195, 10, String('Pag.' + pag));

                            doc.setFontSize(15);
                            doc.setFont("times");
                            doc.setFontType("bold");
                            doc.text(6, altura, String(obj_data[0].tituloReporte));
                            altura = altura +8;
                            doc.setFontSize(9);
                            doc.setFontType("bold");
                            doc.text(6, altura, String(obj_data[0].subTitulo));
                            altura = altura + 15;
                        }

                        cabeceraReporte();


                        for (item of obj_data) {

                            if (nroPregunta != item.nroPregunta) {
                                //---- ASIGNANDO EL VALOR DE LA NUEVA PREGUNTA
                                nroPregunta = item.nroPregunta;

                                doc.setFontType("bold");
                                doc.setFontSize(10);
                                doc.line(6, altura - 5, 200, altura - 5) // horizontal line

                                splitTitle = doc.splitTextToSize(String(item.titulo), 180);
                                doc.text(7, altura, splitTitle);
                                altura = (splitTitle.length == 1) ? altura = altura + 6 : altura = altura + ((splitTitle.length) * 5);                                                       

                                doc.setFontType("normal");
                                doc.setFontSize(9);                 
                                if (item.esMarcar == 0) {

                                    doc.text(7, altura, String(item.descripcion));
                                    altura = altura + 5;
                                    doc.line(6, altura, 200, altura) // horizontal line
                                    altura = altura + 8;

                                } else {
                                    doc.rect(5, altura - 3, 5, 4)
                                    doc.text(5.5, altura, String(item.valor));

                                    //----ALTERNATIVAS
                                    splitTitle = doc.splitTextToSize(String(item.descripcion), 180);
                                    doc.text(12, altura, splitTitle);
                                    altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);    
                                }
                            }
                            else {

                                doc.setFontType("normal");
                                doc.setFontSize(9);

                                if (item.esMarcar == 0) {
                                    doc.text(6, altura, String(item.descripcion));
                                    altura = altura + 5;
                                    doc.line(6, altura, 200, altura) // horizontal line
                                    altura = altura + 8;
                                } else {

                                    //-----rectangulo *-----
                                    doc.rect(5, altura - 3, 5, 4)
                                    doc.text(5.5, altura, String(item.valor));
                                   //----ALTERNATIVAS
                                    splitTitle = doc.splitTextToSize(String(item.descripcion), 180);
                                    doc.text(12, altura, splitTitle);
                                    altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);
                                }
                            }

                            if (altura > 270) {
                                altura = 15;
                                doc.addPage()
                                cabeceraReporte();
                            }
                        }

                        doc.line(6, altura, 200, altura) // horizontal line

                        //var string = doc.output('datauristring');
                        //var iframe = "<iframe width='100%' height='100%' src='" + string + "'></iframe>";
                        //var x = window.open();
                        //x.document.open();
                        //x.document.write(iframe);
                        //x.document.close();

                        setTimeout(function () {
                            doc.save('ATS_' +getCodUniq() + '.pdf');
                            q.resolve('success');
                        }, 0);     

                    } else {
                        q.resolve('success');
                    }
                })
                .error(function () {
                    $('.sige-load').hide();
                });
            return q.promise;

        }

        $scope.getPdf_formato2 = function (data) {
            var q = $q.defer();

            $('.sige-load').show();
            var variables = {
                method: 'POST',
                url: '../GeneracionActas/get_generacionPdf_checkList',
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                },
                data: {
                    idCheckList: data.idCheckList,
                    tipoFormato: 2
                }
            }
            $http(variables)
                .success(function (obj_data) {
                    $('.sige-load').hide();


                    if (obj_data.length > 0) {

                        var doc = new jsPDF();
                        doc.setFillColor(255, 255, 255)
                        var altura = 15;
                        let nroPregunta = 0;
                        let splitTitle = '';
                        let pag = 0;

                        let cabeceraReporte = () => {
                            pag += 1;
                            doc.setFontSize(6);
                            doc.text(195, 10, String('Pag.' + pag));

                            doc.setFontSize(14);
                            doc.setFont("times");
                            doc.setFontType("bold");
                            doc.text(6, altura, String(obj_data[0].tituloReporte));
                            altura = altura + 8;
                            doc.setFontSize(9);
                            doc.setFontType("bold");
                            doc.text(6, altura, String(obj_data[0].subTitulo));
                            altura = altura + 15;
                        }

                        cabeceraReporte();

                        let flagMultiple = false;

                        for (item of obj_data) {

                            if (nroPregunta != item.nroPregunta) {
                                //---- ASIGNANDO EL VALOR DE LA NUEVA PREGUNTA
                                nroPregunta = item.nroPregunta;

                                if (flagMultiple == true) {
                                    doc.line(6, altura, 200, altura) // horizontal line
                                    altura = altura + 8;
                                }

                                flagMultiple = false; 

                                doc.setFontType("bold");
                                doc.setFontSize(10);
                                doc.line(6, altura - 5, 200, altura - 5) // horizontal line

                                splitTitle = doc.splitTextToSize(String(item.titulo), 180);
                                doc.text(7, altura, splitTitle);
                                altura = (splitTitle.length == 1) ? altura = altura + 6 : altura = altura + ((splitTitle.length) * 5);

                                if (item.esMarcar == 0 && item.esOpcion == 1) {
                                    if (String(item.subtitulo1).length <= 2) {
                                        doc.setFontSize(10);
                                        doc.text(155, altura, String(item.subtitulo1));
                                        doc.text(175, altura, String(item.subtitulo2));
                                        doc.text(195, altura, String(item.subtitulo3));
                                    } else {
                                        doc.setFontSize(7);
                                        doc.text(150, altura, String(item.subtitulo1));
                                        doc.text(168, altura, String(item.subtitulo2));
                                        doc.text(190, altura, String(item.subtitulo3));
                                    }
                                    altura = altura + 8;
                                }                 

                                doc.setFontType("normal");
                                doc.setFontSize(9);
                                if (item.esMarcar == 0 && item.esOpcion == 0) {

                                    doc.text(7, altura, String(item.descripcion));
                                    altura = altura + 5;
                                    doc.line(6, altura, 200, altura) // horizontal line
                                    altura = altura + 8;

                                } else {

                                    if (item.esMarcar == 1) { /////-  check

                                        flagMultiple = true;

                                        doc.rect(5, altura - 3, 5, 4)
                                        doc.text(5.5, altura, String(item.valor));

                                        //----ALTERNATIVAS
                                        splitTitle = doc.splitTextToSize(String(item.descripcion), 180);
                                        doc.text(12, altura, splitTitle);
                                        altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);
                                    }
                                    if (item.esMarcar == 0 && item.esOpcion == 1) {  ////--- opcion multiple radios button
                                        flagMultiple = true;
 
                                        doc.circle(157.5, altura - 1, 3,)
                                        doc.text(156.5, altura, String(item.valor));

                                        doc.circle(177.5, altura - 1, 3,)
                                        doc.text(176.5, altura, String(item.valor2));

                                        doc.circle(197.5, altura - 1, 3,)
                                        doc.text(196.5, altura, String(item.valor3));        

                                        //----ALTERNATIVAS
                                        splitTitle = doc.splitTextToSize(String(item.descripcion), 120);
                                        doc.text(6, altura, splitTitle);
                                        altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);

                                    }
                                }
                            }
                            else {

                                doc.setFontType("normal");
                                doc.setFontSize(9);

                                if (item.esMarcar == 0 && item.esOpcion == 0) {
                                    doc.text(6, altura, String(item.descripcion));
                                    altura = altura + 5;
                                    doc.line(6, altura, 200, altura) // horizontal line
                                    altura = altura + 8;
                                } else {


                                    if (item.esMarcar == 1) {
                                        flagMultiple = true;
                                        //-----rectangulo *-----
                                        doc.rect(5, altura - 3, 5, 4)
                                        doc.text(5.5, altura, String(item.valor));
                                        //----ALTERNATIVAS
                                        splitTitle = doc.splitTextToSize(String(item.descripcion), 180);
                                        doc.text(12, altura, splitTitle);
                                        altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);
                                    }
                                    if (item.esMarcar == 0 && item.esOpcion == 1) { ////    opcion multiple radios button
                                        flagMultiple = true;

                                        doc.circle(157.5, altura - 1, 3,)
                                        doc.text(156.5, altura, String(item.valor));

                                        doc.circle(177.5, altura - 1, 3,)
                                        doc.text(176.5, altura, String(item.valor2));

                                        doc.circle(197.5, altura - 1, 3,)
                                        doc.text(196.5, altura, String(item.valor3));

                                        //----ALTERNATIVAS
                                        splitTitle = doc.splitTextToSize(String(item.descripcion), 120);
                                        doc.text(6, altura, splitTitle);
                                        altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);
                                    }
                                }
                            }

                            if (altura > 270) {
                                altura = 15;
                                doc.addPage()
                                cabeceraReporte();
                            }
                        }

                        doc.line(6, altura, 200, altura) // horizontal line

                        //var string = doc.output('datauristring');
                        //var iframe = "<iframe width='100%' height='100%' src='" + string + "'></iframe>";
                        //var x = window.open();
                        //x.document.open();
                        //x.document.write(iframe);
                        //x.document.close();

                        setTimeout(function () {
                            doc.save('EQUIPOS_HERRAMIENTAS_' + getCodUniq() + '.pdf');
                            q.resolve('success');
                        }, 0);

                    } else {
                        q.resolve('success');
                    }
                })
                .error(function () {
                    $('.sige-load').hide();
                });
            return q.promise;

        }

        $scope.getPdf_formato3 = function (data) {
            var q = $q.defer();

            $('.sige-load').show();
            var variables = {
                method: 'POST',
                url: '../GeneracionActas/get_generacionPdf_checkList',
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                },
                data: {
                    idCheckList: data.idCheckList,
                    tipoFormato: 3
                }
            }
            $http(variables)
                .success(function (obj_data) {
                    $('.sige-load').hide();


                    if (obj_data.length > 0) {

                        var doc = new jsPDF();
                        doc.setFillColor(255, 255, 255)

                        var altura = 15;
                        let nroPregunta = 0;
                        let splitTitle = '';
                        let pag = 0;

                        let cabeceraReporte = () => {
                            pag += 1;
                            doc.setFontSize(6);
                            doc.text(195, 10, String('Pag.' + pag));

                            doc.setFontSize(14);
                            doc.setFont("times");
                            doc.setFontType("bold");
                            doc.text(6, altura, String(obj_data[0].tituloReporte));
                            altura = altura + 8;
                            doc.setFontSize(9);
                            doc.setFontType("bold");
                            doc.text(6, altura, String(obj_data[0].subTitulo));
                            altura = altura + 15;
                        }

                        cabeceraReporte();

                        let flagMultiple = false;

                        for (item of obj_data) {

                            if (nroPregunta != item.nroPregunta) {
                                //---- ASIGNANDO EL VALOR DE LA NUEVA PREGUNTA
                                nroPregunta = item.nroPregunta;

                                if (flagMultiple == true) {
                                    doc.line(6, altura, 200, altura) // horizontal line
                                    altura = altura + 8;
                                }

                                flagMultiple = false;

                                doc.setFontType("bold");
                                doc.setFontSize(10);
                                doc.line(6, altura - 5, 200, altura - 5) // horizontal line

                                splitTitle = doc.splitTextToSize(String(item.titulo), 180);
                                doc.text(7, altura, splitTitle);
                                altura = (splitTitle.length == 1) ? altura = altura + 6 : altura = altura + ((splitTitle.length) * 5);

                                if (item.esMarcar == 0 && item.esOpcion == 1) {
                                        doc.setFontSize(7);
                                        doc.text(135, altura, String(item.subtitulo1));
                                        doc.text(155, altura, String(item.subtitulo2));
                                        doc.text(175, altura, String(item.subtitulo3));
                                        doc.text(190, altura, String(item.subtitulo4));
                                        altura = altura + 8;
                                }

                                doc.setFontType("normal");
                                doc.setFontSize(9);
                                if (item.esMarcar == 0 && item.esOpcion == 0) {

                                    doc.text(7, altura, String(item.descripcion));
                                    altura = altura + 5;
                                    doc.line(6, altura, 200, altura) // horizontal line
                                    altura = altura + 8;

                                } else {

                                    if (item.esMarcar == 1) { /////-  check

                                        flagMultiple = true;

                                        doc.rect(5, altura - 3, 5, 4)
                                        doc.text(5.5, altura, String(item.valor));

                                        //----ALTERNATIVAS
                                        splitTitle = doc.splitTextToSize(String(item.descripcion), 180);
                                        doc.text(12, altura, splitTitle);
                                        altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);
                                    }
                                    if (item.esMarcar == 0 && item.esOpcion == 1) {  ////--- opcion multiple radios button
                                        flagMultiple = true;                                                
                                        
                                        doc.circle(137.5, altura - 1, 3,)
                                        doc.text(136.5, altura, String(item.valor));

                                        doc.circle(157.5, altura - 1, 3,)
                                        doc.text(156.5, altura, String(item.valor2));

                                        doc.circle(177.5, altura - 1, 3,)
                                        doc.text(176.5, altura, String(item.valor3));

                                        doc.circle(197.5, altura - 1, 3,)
                                        doc.text(196.5, altura, String(item.valor4));

                                        //----ALTERNATIVAS
                                        splitTitle = doc.splitTextToSize(String(item.descripcion), 120);
                                        doc.text(6, altura, splitTitle);
                                        altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);

                                    }
                                }
                            }
                            else {

                                doc.setFontType("normal");
                                doc.setFontSize(9);

                                if (item.esMarcar == 0 && item.esOpcion == 0) {
                                    doc.text(6, altura, String(item.descripcion));
                                    altura = altura + 5;
                                    doc.line(6, altura, 200, altura) // horizontal line
                                    altura = altura + 8;
                                } else {

                                    if (item.esMarcar == 1) { ///--- check
                                        flagMultiple = true;
                                        //-----rectangulo *-----
                                        doc.rect(5, altura - 3, 5, 4)
                                        doc.text(5.5, altura, String(item.valor));
                                        //----ALTERNATIVAS
                                        splitTitle = doc.splitTextToSize(String(item.descripcion), 180);
                                        doc.text(12, altura, splitTitle);
                                        altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);
                                    }
                                    if (item.esMarcar == 0 && item.esOpcion == 1) { ////    opcion multiple radios button
                                        flagMultiple = true;

                                        doc.circle(137.5, altura - 1, 3,)
                                        doc.text(136.5, altura, String(item.valor));

                                        doc.circle(157.5, altura - 1, 3,)
                                        doc.text(156.5, altura, String(item.valor2));

                                        doc.circle(177.5, altura - 1, 3,)
                                        doc.text(176.5, altura, String(item.valor3));

                                        doc.circle(197.5, altura - 1, 3,)
                                        doc.text(196.5, altura, String(item.valor4));

                                        //----ALTERNATIVAS
                                        splitTitle = doc.splitTextToSize(String(item.descripcion), 120);
                                        doc.text(6, altura, splitTitle);
                                        altura = (splitTitle.length == 1) ? altura = altura + 8 : altura = altura + ((splitTitle.length) * 5);
                                    }
                                }
                            }

                            if (altura > 270) {
                                altura = 15;
                                doc.addPage()
                                cabeceraReporte();
                            }
                        }

                        doc.line(6, altura, 200, altura) // horizontal line

                        //var string = doc.output('datauristring');
                        //var iframe = "<iframe width='100%' height='100%' src='" + string + "'></iframe>";
                        //var x = window.open();
                        //x.document.open();
                        //x.document.write(iframe);
                        //x.document.close();

                        setTimeout(function () {
                            doc.save('CONDUCCION_' + getCodUniq() + '.pdf');
                            q.resolve('success');
                        }, 0);

                    } else {
                        q.resolve('success');
                    }
                })
                .error(function () {
                    $('.sige-load').hide();
                });
            return q.promise;

        }

 
        function getDateNow() {
            var meses = new Array("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre");
            var diasSemana = new Array("Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado");
            var f = new Date()
            return diasSemana[f.getDay()] + ", " + f.getDate() + " de " + meses[f.getMonth()] + " de " + f.getFullYear();
        };

        function getDateHour() {
            var f = new Date()
            return f.getHours() + ':' + f.getMinutes() + ':' + f.getSeconds();
        }
    });

</script>


<div class="panel panel-oscuro" ng-app="appControlPreventivo" ng-controller="ctrlControl" ng-init="inicializando_variables();">
    <div class="panel-heading">
        <h6><i class="fa fa-table fa-lg"></i> REPORTES CHECK LIST </h6>

    </div>
    <div class="panel-body">
        <div id="Contenedor">
            <form class="form-inline">
                <div class="row" style=" margin-top: -10px;">
                    <div class="col-lg-12">
                        <div class="well" style="background: #314b75; color: white;">
                            <center>

                                <div class="form-group" style="padding-left: 15px;">
                                    <label for="cbo_servicio" style="margin-top: 5px;">Actividad:</label>
                                    <select id="cbo_servicio" class="form-control" ng-model="id_tipoServicio">
                                        <option value=0>--[ SELECCIONE ]-- </option>
                                        <option ng-repeat="item in Obj_List_Servicios" value="{{item.id_TipoServicio}}">
                                            {{item.nombre_tiposervicio}}
                                        </option>
                                    </select>
                                </div>

                                <div class="form-group" style="padding-left: 15px;">
                                    <label for="id_fecha"  >Fecha: </label>
                                    <input class="form-control" style="width: 150px;" id="id_fecha" placeholder="dia/mes/año" type="text" value="@DateTime.Now.ToString("dd/MM/yyyy")" />
                                </div>

                                <div class="form-group" style="padding-left: 15px;  margin-top: 5px;">
                                    <label for="cbo_operario" >Operario:</label>
                                    <select id="cbo_operario" class="form-control" ng-model="id_operario">
                                        <option value=0>--[ TODOS ]-- </option>
                                        <option ng-repeat="item in Obj_List_Operario" value="{{item.id_Operario}}">
                                            {{item.id_Operario}} : {{item.desc_operario}}
                                        </option>
                                    </select>
                                </div>


                                <div class="form-group" style="padding-left: 15px;  margin-top: 5px;">
                                    <label for="cbo_tipoReporte"  >Tipo Reporte:</label>
                                    <select id="cbo_tipoReporte" class="form-control" ng-model="tipo_reporte">
                                        <option value=1> 1 - ANALISIS DE TRABAJO SEGURO ATS </option>
                                        <option value=2> 2 - EPP EQUIPOS Y HERRAMIENTAS </option>
                                        <option value=3> 3 - CHECKLIST DE CONDUCCION SEGURA </option>

                                    </select>
                                </div>

                                <div class="form-group" style="padding-left: 15px; margin-top: 5px;">
                                    <button class="btn btn-success"   ng-click="mostrar_checkList();"><span class="glyphicon glyphicon-refresh"></span> Mostrar</button>
                                    <button class="btn btn-primary " ng-click="descargarMasivo();"><span class="glyphicon glyphicon-download-alt"></span> PDF</button>
                                </div>
                            </center>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="progress">
            <div class="progress-bar" role="progressbar" style="width: {{progress}}%;" aria-valuenow="{{progress}}" aria-valuemin="0" aria-valuemax="100">{{progress | number : 2}}%</div>
        </div>


        <div class="row">
            <div class="col-lg-12">
                <div id="Principal" class="table-responsive">
                    <table id="tblLista" class="table  table-bordered table-responsive" border="0" cellspacing="0" cellpadding="0" style="font-size:11px">
                        <thead style="color:#7991a5;">
                            <tr>
                                <th style="text-align:center">#</th>
                                <th style="text-align:center">NRO CHECK LIST</th>
                                <th style="text-align:center">FECHA CHECK LIST</th>
                                <th style="text-align:center">OPERARIO</th>
                                <th style="text-align:center"> DESCARGAR</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="item in Obj_List_Cabecera" on-finish-render="ngRepeatFinished_cabecera">
                                <td>{{$index + 1}}</td>
                                <td style="text-align:center">{{item.nroCheckList}}</td>
                                <td style="text-align:center">{{item.fechaCheckList}}</td>
                                <td>{{item.operario}}</td>
                                <td style="text-align:center"> <button class="btn btn-xs btn-primary" ng-click="crear_pdf_checkList(item);"><span class="glyphicon glyphicon-download-alt"></span> </button> </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



